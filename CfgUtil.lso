dnl ---
ifdef(`cfg_util_lso_m4',,`define(`cfg_util_lso_m4', 1)dnl

include(Set.lso)
include(Map.lso)
include(Util.lso)

  (CFGFIRST LAMBDA (CFG S)
    (LETREC
	  (IF (ATOM S)
          (LHSFIRST S (NEWSET) (NEWSET))
		  (RHSFIRST S (NEWSET) (NEWSET))) 
      (LHSFIRST LAMBDA (SYM V CC)
        (IF (CFGISTERMINAL CFG SYM)
            (SETPUT CC SYM)
        (IF (SETCONTAINS V SYM)
            CC
            (ALLRHSFIRST SYM (MAPGET CFG SYM) (SETPUT V SYM) CC))))
      (ALLRHSFIRST LAMBDA (SYM N V CC)
        (IF (EQ N 0)
            CC
            (LET
              (ALLRHSFIRST SYM INDEX V (RHSFIRST (MAPGET CFG (CONS SYM INDEX)) V CC))
              (INDEX SUB N 1))))
      (RHSFIRST LAMBDA (RHS V CC)
        (IF (ISNIL RHS)
            (SETPUT CC (QUOTE NIL))
            (IF (CFGISTERMINAL CFG (CAR RHS))
                (SETPUT CC (CAR RHS))
                (LET
                  (IF (SETCONTAINS CARFIRST (QUOTE NIL))
                      (LHSFIRST (CDR RHS) V (SETDEL CARFIRST (QUOTE NIL)))
                      CARFIRST)
                  (CARFIRST LHSFIRST (CAR RHS) V CC)))))))

  (CFGCLOSURE LAMBDA (CFG KERNEL)
    (LETREC
      (SETTOLIST (CFGCLOSURECC KERNEL (NEWSET)))
      (CFGCLOSURECC LAMBDA (KERNEL CC)
        (IF (ISNIL KERNEL)
            CC
            (LET
              (ADDITEMSFORSYM
                NEXTSYM
                (MAPGET CFG NEXTSYM)
                (CDR KERNEL)
                (SETPUT CC (CAR KERNEL)))
              (NEXTSYM CFGSYMAFTERDOT CFG (CAR KERNEL)))))
      (ADDITEMSFORSYM LAMBDA (SYM N KERNEL CC)
        (IF (OR (EQ N 0) (ISNIL SYM))
            (CFGCLOSURECC KERNEL CC)
            (LET
              (IF (SETCONTAINS CC ITEM)
                  (ADDITEMSFORSYM SYM (SUB N 1) KERNEL CC)
                  (ADDITEMSFORSYM SYM (SUB N 1) (CONS ITEM KERNEL) (SETPUT CC ITEM)))
              (ITEM CONS3 SYM (SUB N 1) 0))))))

  (CFGSYMAFTERDOT LAMBDA (CFG ITEM)
    (LETREC
      (RHSNTH (CFGGETRHS CFG ITEM) (THIRD ITEM))
      (RHSNTH LAMBDA (RHS N)
        (IF (ISNIL RHS)
            RHS
        (IF (ISZERO N)
            (CAR RHS)
            (RHSNTH (CDR RHS) (SUB N 1)))))))

  (CFGGETRHS LAMBDA (CFG ITEM)
    (MAPGET CFG (CONS (FIRST ITEM) (SECOND ITEM))))

  (CFGGOTO LAMBDA (CFG ITEMS SYM)
    (CFGCLOSURE CFG
      (MAP
        (LAMBDA (ITEM) (CONS3 (FIRST ITEM) (SECOND ITEM) (ADD 1 (THIRD ITEM))))
        (FILTER
          (LAMBDA (ITEM) (EQ SYM (CFGSYMAFTERDOT CFG ITEM)))
          ITEMS))))

  (CFGALLSYMSAFTERDOT LAMBDA (CFG ITEMS)
    (LETREC
      (SETTOLIST (SETDEL (CFGALLSYMSAFTERDOTCC ITEMS (NEWSET)) (QUOTE NIL)))
      (CFGALLSYMSAFTERDOTCC LAMBDA (ITEMS CC)
        (IF (ISNIL ITEMS)
            CC
            (CFGALLSYMSAFTERDOTCC (CDR ITEMS) (SETPUT CC (CFGSYMAFTERDOT CFG (CAR ITEMS))))))))

  (CFGSTATES LAMBDA (CFG)
    (LETREC
      (SETTOLIST (CFGSTATESCC (CONS1 (CFGCLOSURE CFG (CONS1 (CONS3 (QUOTE START) 0 0)))) (NEWSET)))
      (CFGSTATESCC LAMBDA (Q CC)
        (IF (ISNIL Q)
            CC
            (CFGGOTOSTATES (CDR Q) (CAR Q) (CFGALLSYMSAFTERDOT CFG (CAR Q)) (SETPUT CC (CAR Q)))))
      (CFGGOTOSTATES LAMBDA (Q STATE SYMS CC)
        (IF (ISNIL SYMS)
            (CFGSTATESCC Q CC)
			(LET
			  (IF (SETCONTAINS CC NEXT)
			      (CFGGOTOSTATES Q STATE (CDR SYMS) CC)
				  (CFGGOTOSTATES (CONS NEXT Q) STATE (CDR SYMS) (SETPUT CC NEXT)))
			  (NEXT CFGGOTO CFG STATE (CAR SYMS)))))))

  (CFGEXPANDITEM LAMBDA (CFG ITEM)
    (CONS (FIRST ITEM) (CONS (QUOTE >) (INSERT (CFGGETRHS CFG ITEM) (THIRD ITEM) (QUOTE _)))))

  (CFGISTERMINAL LAMBDA (CFG SYM)
    (EQ (MAPGET CFG SYM) 0))
    
')dnl
