(LETREC ANALYSE
  (ANALYSE LAMBDA NIL (LEXINITIAL (SCAN)))

  (LEXINITIAL LAMBDA (C)
    (IF (LEQ C 0)
        (QUOTE NIL)
    (IF (ISOPENPAREN C)
        (CONS (QUOTE (OPENP)) (LEXINITIAL (SCAN)))
    (IF (ISCLOSEPAREN C)
        (CONS (QUOTE (CLOSEP)) (LEXINITIAL (SCAN)))
    (IF (ISINITIAL C)
        (LEXIDENT (GET))
    (IF (ISDOT C)
        (LEXSTARTSWITHDOT (GET))
    (IF (ISPOUND C)
        (LEXSTARTSWITHPOUND (GET))
    (IF (ISDQUOTE C)
        (LEXSTRING (GET))
    (IF (ISQUOTE C)
        (CONS (QUOTE (QUOTE)) (LEXINITIAL (SCAN)))
    (IF (ISBACKQUOTE C)
        (CONS (QUOTE (BACKQUOTE)) (LEXINITIAL (SCAN)))
    (IF (ISCOMMA C)
        (LEXSTARTSWITHCOMMA (GET))
    (IF (ISSEMI C)
        (LEXINITIAL (FIRST (SCAN) (SKIPCOMMENT)))
    (IF (ISWHITESPACE C)
        (LEXINITIAL (SCAN))
    (IF (ISDIGIT C)
        (LEXCOMPLEX C 10 (QUOTE NIL) DIGITVALUEDEC) 
    (IF (ISPLUS C)
        (LEXSTARTSWITHSIGN (GET) (QUOTE (PLUS)))
    (IF (ISMINUS C)
        (LEXSTARTSWITHSIGN (GET) (QUOTE (MINUS)))
        (QUOTE ((ERROR)))))))))))))))))))

  (LEXSTARTSWITHSIGN LAMBDA (C TOKEN)
    (IF (OR (ISDELIM C) (ISWHITESPACE C))
        (CONS TOKEN (LEXENDTOKEN C))
        (LEXCOMPLEX4 C 10 (QUOTE NIL) DIGITVALUEDEC)))

  (LEXIDENT LAMBDA (C)
    (IF (ISSUBSEQUENT C)
        (LEXIDENT (GET))
        (CONS (QUOTE (IDENT)) (LEXENDTOKEN C))))

  (LEXSTARTSWITHDOT LAMBDA (C)
    (IF (ISDOT C)
        (LEXELLIPSIS (GET))
    (IF (ISDIGIT C)
        (LEXREAL7 C 10 (QUOTE NIL) DIGITVALUEDEC LEXCOMPLEX1)
        (CONS (QUOTE (DOT)) (LEXENDTOKEN C)))))

  (LEXSTARTSWITHCOMMA LAMBDA (C)
    (IF (ISATSIGN C)
        (CONS (QUOTE (COMMAAT)) (LEXINITIAL (SCAN)))
        (CONS (QUOTE (COMMA)) (LEXINITIAL C))))

  (LEXELLIPSIS LAMBDA (C)
    (IF (ISDOT C)
        (CONS (QUOTE (IDENT ELLIPSIS)) (LEXENDTOKEN (GET)))
        (QUOTE ((ERROR)))))
  
  (LEXENDTOKEN LAMBDA (C)
    (IF (LEQ C 0)
        (QUOTE NIL)
    (IF (ISWHITESPACE C)
        (LEXINITIAL (SCAN))
    (IF (ISDELIM C)
        (LEXINITIAL C)
        (QUOTE ((ERROR)))))))

  (LEXSTARTSWITHPOUND LAMBDA (C)
    (IF (IST C)
        (CONS (QUOTE (BOOL T)) (LEXENDTOKEN (GET)))
    (IF (ISF C)
        (CONS (QUOTE (BOOL F)) (LEXENDTOKEN (GET)))
    (IF (ISOPENPAREN C)
        (CONS (QUOTE (OPENVEC)) (LEXINITIAL (SCAN)))
    (IF (ISBACKSLASH C)
        (LEXCHARACTER (GET))
    (IF (ISNUMBERPREFIX C)
        (LEXNUMBERPREFIXITEM C (QUOTE NIL) (QUOTE NIL))
        (QUOTE (ERROR))))))))

  (LEXNUMBERPREFIX LAMBDA (C BASE EXACT)
    (IF (ISPOUND C)
        (LEXNUMBERPREFIX (GET) BASE EXACT)
        (LEXNUMBER C BASE EXACT)))

  (LEXNUMBER LAMBDA (C BASE EXACT)
    (LET
      (LET
        (LEXCOMPLEX C BASE EXACT DIGITVALUE)
        (DIGITVALUE . (IF (EQ BASE 2) DIGITVALUEBIN
                      (IF (EQ BASE 8) DIGITVALUEOCT
                      (IF (EQ BASE 10) DIGITVALUEDEC
                      (IF (EQ BASE 16) DIGITVALUEHEX
                          (LAMBDA (C) (QUOTE -1))))))))
      (EXACT IF (ISNIL EXACT) (QUOTE T) EXACT)
      (BASE IF (ISNIL BASE) 10 BASE)))

  (LEXCOMPLEX LAMBDA (C BASE EXACT DIGITVALUE)
    (IF (ISSIGN C)
        (LEXCOMPLEX4 (GET) BASE EXACT DIGITVALUE)
        (LEXUREAL C BASE EXACT DIGITVALUE LEXCOMPLEX1)))

  (LEXCOMPLEX1 LAMBDA (C BASE EXACT DIGITVALUE)
    (IF (ISSIGN C)
        (LEXCOMPLEX7 (GET) BASE EXACT DIGITVALUE)
    (IF (ISATSIGN C)
        (LEXCOMPLEX2 (GET) BASE EXACT DIGITVALUE)
        (CONS (QUOTE (NUMBER)) (LEXENDTOKEN C)))))

  (LEXCOMPLEX2 LAMBDA (C BASE EXACT DIGITVALUE)
    (LEXREAL C BASE EXACT DIGITVALUE (QUOTE NIL) LEXCOMPLEX3))

  (LEXCOMPLEX3 LAMBDA (C BASE EXACT DIGITVALUE)
    (CONS (QUOTE (NUMBER)) (LEXENDTOKEN C)))

  (LEXCOMPLEX4 LAMBDA (C BASE EXACT DIGITVALUE)
    (IF (ISIMAGUNIT C)
        (LEXCOMPLEX5 (GET) BASE EXACT DIGITVALUE)
        (LEXUREAL C BASE EXACT DIGITVALUE LEXCOMPLEX6)))

  (LEXCOMPLEX5 LAMBDA (C BASE EXACT DIGITVALUE)
    (CONS (QUOTE (NUMBER)) (LEXENDTOKEN C)))

  (LEXCOMPLEX6 LAMBDA (C BASE EXACT DIGITVALUE)
    (IF (ISSIGN C)
        (LEXCOMPLEX7 (GET) BASE EXACT DIGITVALUE)
    (IF (ISATSIGN C)
        (LEXCOMPLEX2 (GET) BASE EXACT DIGITVALUE)
    (IF (ISIMAGUNIT C)
        (LEXCOMPLEX5 (GET) BASE EXACT DIGITVALUE)
        (CONS (QUOTE (NUMBER)) (LEXENDTOKEN C))))))

  (LEXCOMPLEX7 LAMBDA (C BASE EXACT DIGITVALUE)
    (IF (ISIMAGUNIT C)
        (LEXCOMPLEX5 (GET) BASE EXACT DIGITVALUE)
        (LEXUREAL C BASE EXACT DIGITVALUE LEXCOMPLEX8)))

  (LEXCOMPLEX8 LAMBDA (C BASE EXACT DIGITVALUE)
    (IF (ISIMAGUNIT C)
        (LEXCOMPLEX5 (GET) BASE EXACT DIGITVALUE)
        (QUOTE ((ERROR)))))

  (LEXUREAL LAMBDA (C BASE EXACT DIGITVALUE TERMINAL)
    (LEXREAL C BASE EXACT DIGITVALUE 43 TERMINAL))

  (LEXREAL LAMBDA (C BASE EXACT DIGITVALUE SIGN TERMINAL)
    (IF (ISSIGN C)
        (IF (ISNIL SIGN)
            (LEXREAL1 (GET) BASE EXACT DIGITVALUE C TERMINAL)
            (QUOTE ((ERROR))))
    (IF (ISDOT C)
        (IF (EQ BASE 10)
            (LEXREAL7 (GET) BASE EXACT DIGITVALUE SIGN TERMINAL)
            (QUOTE ((ERROR))))
        (LET
          (IF (GEQ DIGIT 0)
              (LEXREAL2 (GET) BASE EXACT DIGITVALUE SIGN TERMINAL)
              (QUOTE ((ERROR))))
          (DIGIT DIGITVALUE C)))))

  (LEXREAL1 LAMBDA (C BASE EXACT DIGITVALUE SIGN TERMINAL)
    (IF (ISDOT C)
        (IF (EQ BASE 10)
            (LEXREAL7 (GET) BASE EXACT DIGITVALUE SIGN TERMINAL)
            (QUOTE ((ERROR))))
        (LET
          (IF (GEQ DIGIT 0)
              (LEXREAL2 (GET) BASE EXACT DIGITVALUE SIGN TERMINAL)
              (QUOTE ((ERROR))))
          (DIGIT DIGITVALUE C))))

  (LEXREAL2 LAMBDA (C BASE EXACT DIGITVALUE SIGN TERMINAL)
    (IF (ISDOT C)
        (IF (EQ BASE 10)
            (LEXREAL8 (GET) BASE EXACT DIGITVALUE SIGN TERMINAL)
            (QUOTE ((ERROR))))
    (IF (ISPOUND C)
        (LEXREAL3 (GET) BASE EXACT DIGITVALUE SIGN TERMINAL)
        (LET
          (IF (GEQ DIGIT 0)
              (LEXREAL2 (GET) BASE EXACT DIGITVALUE SIGN TERMINAL)
              (TERMINAL C BASE EXACT DIGITVALUE))
          (DIGIT DIGITVALUE C)))))

  (LEXREAL3 LAMBDA (C BASE EXACT DIGITVALUE SIGN TERMINAL)
    (IF (ISDOT C)
        (IF (EQ BASE 10)
            (LEXREAL9 (GET) BASE EXACT DIGITVALUE SIGN TERMINAL)
            (QUOTE ((ERROR))))
    (IF (ISPOUND C)
        (LEXREAL3 (GET) BASE EXACT DIGITVALUE SIGN TERMINAL)
    (IF (ISSLASH C)
        (LEXREAL4 (GET) BASE EXACT DIGITVALUE SIGN TERMINAL)
        (TERMINAL C BASE EXACT DIGITVALUE)))))

  (LEXREAL4 LAMBDA (C BASE EXACT DIGITVALUE SIGN TERMINAL)
    (LET
      (IF (GEQ DIGIT 0)
          (LEXREAL5 (GET) BASE EXACT DIGITVALUE SIGN TERMINAL)
          (QUOTE ((ERROR))))
      (DIGIT DIGITVALUE C)))

  (LEXREAL5 LAMBDA (C BASE EXACT DIGITVALUE SIGN TERMINAL)
    (IF (ISPOUND C)
        (LEXREAL6 (GET) BASE EXACT DIGITVALUE SIGN TERMINAL)
        (LET
          (IF (GEQ DIGIT 0)
              (LEXREAL5 (GET) BASE EXACT DIGITVALUE SIGN TERMINAL)
              (TERMINAL C BASE EXACT DIGITVALUE))
          (DIGIT DIGITVALUE C))))

  (LEXREAL6 LAMBDA (C BASE EXACT DIGITVALUE SIGN TERMINAL)
    (IF (ISPOUND C)
        (LEXREAL6 (GET) BASE EXACT DIGITVALUE SIGN TERMINAL)
        (TERMINAL C BASE EXACT DIGITVALUE)))

  (LEXREAL7 LAMBDA (C BASE EXACT DIGITVALUE SIGN TERMINAL)
    (LET
      (IF (GEQ DIGIT 0)
          (LEXREAL8 (GET) BASE EXACT DIGITVALUE SIGN TERMINAL)
          (QUOTE ((ERROR))))
      (DIGIT DIGITVALUE C)))

  (LEXREAL8 LAMBDA (C BASE EXACT DIGITVALUE SIGN TERMINAL)
    (IF (ISPOUND C)
        (LEXREAL9 (GET) BASE EXACT DIGITVALUE SIGN TERMINAL)
    (IF (ISEXPONENTMARKER C)
        (LEXREAL10 (GET) BASE EXACT DIGITVALUE SIGN TERMINAL)
        (LET
          (IF (GEQ DIGIT 0)
              (LEXREAL8 (GET) BASE EXACT DIGITVALUE SIGN TERMINAL)
              (TERMINAL C BASE EXACT DIGITVALUE))
          (DIGIT DIGITVALUE C)))))

  (LEXREAL9 LAMBDA (C BASE EXACT DIGITVALUE SIGN TERMINAL)
    (IF (ISPOUND C)
        (LEXREAL9 (GET) BASE EXACT DIGITVALUE SIGN TERMINAL)
    (IF (ISEXPONENTMARKER C)
        (LEXREAL10 (GET) BASE EXACT DIGITVALUE SIGN TERMINAL)
        (TERMINAL C BASE EXACT DIGITVALUE))))

  (LEXREAL10 LAMBDA (C BASE EXACT DIGITVALUE SIGN TERMINAL)
    (IF (ISSIGN C)
        (LEXREAL11 (GET) BASE EXACT DIGITVALUE SIGN TERMINAL)
        (LET
          (IF (GEQ DIGIT 0)
              (LEXREAL12 (GET) BASE EXACT DIGITVALUE SIGN TERMINAL)
              (QUOTE ((ERROR))))
          (DIGIT DIGITVALUE C))))

  (LEXREAL11 LAMBDA (C BASE EXACT DIGITVALUE SIGN TERMINAL)
    (LET
      (IF (GEQ DIGIT 0)
          (LEXREAL12 (GET) BASE EXACT DIGITVALUE SIGN TERMINAL)
          (QUOTE ((ERROR))))
      (DIGIT DIGITVALUE C)))

  (LEXREAL12 LAMBDA (C BASE EXACT DIGITVALUE SIGN TERMINAL)
    (LET
      (IF (GEQ DIGIT 0)
          (LEXREAL12 (GET) BASE EXACT DIGITVALUE SIGN TERMINAL)
          (TERMINAL C BASE EXACT DIGITVALUE))
      (DIGIT DIGITVALUE C)))

  (LEXNUMBERPREFIXITEM LAMBDA (C BASE EXACT)
    (IF (ISB C)
        (IF (ISNIL BASE)
            (LEXNUMBERPREFIX (GET) 2 EXACT)
            (QUOTE ((ERROR))))
    (IF (ISO C)
        (IF (ISNIL BASE)
            (LEXNUMBERPREFIX (GET) 8 EXACT)
            (QUOTE ((ERROR))))
    (IF (ISD C)
        (IF (ISNIL BASE)
            (LEXNUMBERPREFIX (GET) 10 EXACT)
            (QUOTE ((ERROR))))
    (IF (ISX C)
        (IF (ISNIL BASE)
            (LEXNUMBERPREFIX (GET) 16 EXACT)
            (QUOTE ((ERROR))))
    (IF (ISI C)
        (IF (ISNIL EXACT)
            (LEXNUMBERPREFIX (GET) BASE (QUOTE F))
            (QUOTE ((ERROR))))
    (IF (ISE C)
        (IF (ISNIL EXACT)
            (LEXNUMBERPREFIX (GET) BASE (QUOTE T))
            (QUOTE ((ERROR))))
        (QUOTE ((ERROR))))))))))

  (LEXCHARACTER LAMBDA (C)
    (IF (LEQ C 0)
        (QUOTE ((ERROR)))
    (IF (ISN C)
        (LEXCHARACTERSTARTSWITHN (GET))
    (IF (ISS C)
        (LEXCHARACTERSTARTSWITHS (GET))
        (CONS (CONS (QUOTE CHAR) (CONS C (QUOTE NIL))) (LEXENDTOKEN (GET)))))))

  (LEXCHARACTERSTARTSWITHN LAMBDA (C)
    (IF (ISE C)
        (IF (EXPECT (QUOTE (119 108 105 110 101)))
            (CONS (QUOTE (CHAR 10)) (LEXENDTOKEN (GET)))
            (QUOTE ((ERROR))))
        (CONS (QUOTE (CHAR 110)) (LEXENDTOKEN C))))
 
  (LEXCHARACTERSTARTSWITHS LAMBDA (C)
    (IF (ISP C)
        (IF (EXPECT (QUOTE (97 99 101)))
            (CONS (QUOTE (CHAR 32)) (LEXENDTOKEN (GET)))
            (QUOTE ((ERROR))))
        (CONS (QUOTE (CHAR 115)) (LEXENDTOKEN C))))

  (EXPECT LAMBDA (S)
    (IF (ISNIL S)
        (QUOTE T)
        (IF (EQ (GET) (CAR S))
            (EXPECT (CDR S))
            (QUOTE F))))
        
  (LEXSTRING LAMBDA (C)
    (IF (LEQ C 0)
        (QUOTE ((ERROR)))
    (IF (ISDQUOTE C)
        (CONS (QUOTE (STRING)) (LEXINITIAL (SCAN)))
    (IF (ISBACKSLASH C)
        (LEXSTRINGESC (GET))
        (LEXSTRING (GET))))))

  (LEXSTRINGESC LAMBDA (C)
    (IF (LEQ C 0)
        (QUOTE ((ERROR)))
    (IF (ISBACKSLASH C)
        (LEXSTRING (GET))
    (IF (ISDQUOTE C)
        (LEXSTRING (GET))
        (QUOTE ((ERROR)))))))

  (GEQ LAMBDA (A B) (LEQ B A))
  (AND LAMBDA (P Q) (IF P Q (QUOTE F)))
  (OR LAMBDA (P Q) (IF P (QUOTE T) Q))
  (IST LAMBDA (C) (OR (EQ C 116) (EQ C 84)))
  (ISF LAMBDA (C) (OR (EQ C 102) (EQ C 70)))
  (ISB LAMBDA (C) (OR (EQ C 98) (EQ C 66)))
  (ISO LAMBDA (C) (OR (EQ C 111) (EQ C 79)))
  (ISD LAMBDA (C) (OR (EQ C 100) (EQ C 68)))
  (ISX LAMBDA (C) (OR (EQ C 120) (EQ C 88)))
  (ISE LAMBDA (C) (OR (EQ C 101) (EQ C 69)))
  (ISI LAMBDA (C) (OR (EQ C 105) (EQ C 73)))
  (ISN LAMBDA (C) (OR (EQ C 110) (EQ C 78)))
  (ISS LAMBDA (C) (OR (EQ C 115) (EQ C 83)))
  (ISP LAMBDA (C) (OR (EQ C 112) (EQ C 80)))
  (ISNUMBERPREFIX LAMBDA (C)
    (CONTAINS (TOLOWER C) (QUOTE (98 111 100 120 105 101))))
  (ISNIL LAMBDA (L) (EQ L (QUOTE NIL)))
  (ISINRANGE LAMBDA (X MIN MAX)
    (AND (LEQ MIN X) (LEQ X MAX)))
  (ISDIGIT LAMBDA (C) (ISINRANGE C 48 57))
  (ISNONZERODIGIT LAMBDA (C) (ISINRANGE C 49 57))
  (CONTAINS LAMBDA (E L)
    (IF (ISNIL L)
        (QUOTE F)
        (OR (EQ E (CAR L)) (CONTAINS E (CDR L)))))
  (ISUPPER LAMBDA (C)
    (ISINRANGE C 65 90))
  (ISLOWER LAMBDA (C)
    (ISINRANGE C 97 122))
  (TOLOWER LAMBDA (C)
    (IF (ISUPPER C) (ADD C 32) C))
  (ISLETTER LAMBDA (C)
    (OR (ISUPPER C) (ISLOWER C)))
  (ISWHITESPACE LAMBDA (C)
    (CONTAINS C (QUOTE (32 9 10 13 0))))
  (ISDOT LAMBDA (C) (EQ C 46))
  (ISPOUND LAMBDA (C) (EQ C 35))
  (ISQUOTE LAMBDA (C) (EQ C 39))
  (ISOPENPAREN LAMBDA (C) (EQ C 40))
  (ISCLOSEPAREN LAMBDA (C) (EQ C 41))
  (ISNEWLINE LAMBDA (C) (EQ C 10))
  (ISSEMI LAMBDA (C) (EQ C 59))
  (ISSPECIALINITIAL LAMBDA (C)
    (CONTAINS C
      (QUOTE (33 36 37 38 42 47 58 60 61 62 63 126 95 94))))
  (ISRADIXMARKER LAMBDA (C)
    (CONTAINS (TOLOWER C) (QUOTE (98 100 111 120))))
  (ISEXACTMARKER LAMBDA (C)
    (OR (ISE C) (ISI C)))
  (ISDIGITBIN LAMBDA (C)
    (OR (EQ C 48) (EQ C 49)))
  (ISDIGITOCT LAMBDA (C)
    (ISINRANGE C 48 55))
  (ISDIGITDEC LAMBDA (C) (ISDIGIT C))
  (ISDIGITHEX LAMBDA (C)
    (OR (ISDIGIT C) (ISINRANGE (TOLOWER C) 97 102)))
  (DIGITVALUEBIN LAMBDA (C)
    (IF (ISDIGITBIN C) (SUB C 48) -1))
  (DIGITVALUEOCT LAMBDA (C)
    (IF (ISDIGITOCT C) (SUB C 48) -1))
  (DIGITVALUEDEC LAMBDA (C)
    (IF (ISDIGITDEC C) (SUB C 48) -1))
  (DIGITVALUEHEX LAMBDA (C)
    (IF (ISDIGITDEC C)
        (SUB C 48)
        (IF (ISINRANGE C 97 102)
            (SUB C 87)
            (IF (ISINRANGE C 65 70)
                (SUB C 55)
                -1))))
  (ISEXPONENTMARKER LAMBDA (C)
    (CONTAINS (TOLOWER C) (QUOTE (101 115 102 100 108))))
  (ISIMAGUNIT LAMBDA (C) (ISI C))
  (ISSIGN LAMBDA (C) (OR (EQ C 43) (EQ C 45)))
  (ISPLUS LAMBDA (C) (EQ C 43))
  (ISMINUS LAMBDA (C) (EQ C 45))
  (ISDQUOTE LAMBDA (C) (EQ C 34)) 
  (ISBACKQUOTE LAMBDA (C) (EQ C 96))
  (ISCOMMA LAMBDA (C) (EQ C 44))
  (ISATSIGN LAMBDA (C) (EQ C 64))
  (ISDELIM LAMBDA (C)
    (OR (ISWHITESPACE C)
        (CONTAINS C
          (QUOTE (40 41 34 59)))))
  (ISSLASH LAMBDA (C) (EQ C 47))
  (ISBACKSLASH LAMBDA (C) (EQ C 92))
  (ISINITIAL LAMBDA (C)
    (OR (ISLETTER C) (ISSPECIALINITIAL C)))
  (ISSPECIALSUBSEQUENT LAMBDA (C)
    (CONTAINS C
      (QUOTE (43 45 46))))
  (ISSUBSEQUENT LAMBDA (C)
    (OR (ISINITIAL C) (OR (ISDIGIT C) (ISSPECIALSUBSEQUENT C))))
  (SKIPWS LAMBDA NIL 
    (LET
      (IF (ISWHITESPACE C) (SKIPWS) C)
      (C GET)))
  (SCAN LAMBDA NIL
    (LET
      (IF (ISWHITESPACE C)
          (SCAN)
          (IF (ISSEMI C)
              (FIRST (SCAN) (SKIPCOMMENT))
              C))
      (C GET)))
  (SKIPCOMMENT LAMBDA NIL
    (LET
      (IF (ISNEWLINE C) (GET) (SKIPCOMMENT))
      (C GET)))
  (FIRST LAMBDA (A B) A))
