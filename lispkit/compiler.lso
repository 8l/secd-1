dnl  ===========================================================================
dnl | Extended LispKit Lisp Compiler
dnl |
dnl | This compiler is substantially the same as the one in Henderson's [1]
dnl | book, except for the following:
dnl |
dnl |  - additional commands have been added to make use of the additional
dnl |    opcodes that have been added to the SECD machine (see secd.asm).
dnl |  - the generated code has also been modified to implement proper handling
dnl |    of tail calls (Exercise 6.6 in Henderson's book).  We also handle
dnl |    handling of tail calls when they occur within an (IF ...) expression.
dnl |  - For code compiled with this compiler, numbers do not need to be quoted.
dnl |    For example, one may use "(EQ X 0)" instead of "(EQ X (QUOTE 0))".
dnl |
dnl | NOTE: This compiler is intended to be compiled by the original LispKit
dnl |       Lisp compiler, and so must not use these extended features.
dnl |
dnl | Chapter 6 of Henderson's book describes the construction of this compiler
dnl | in detail.  The original compiler and object file, transcribed from
dnl | Appendix 2 of the book, may be found in APENDIX2.LSO and APENDIX2.LOB,
dnl | respectively.
dnl |
dnl | [1] P. Henderson, "Functional Programming: Application and Implementation",
dnl |     Prentice Hall, 1980.
dnl  ===========================================================================
dnl
        (LETREC COMPILE
            (COMPILE LAMBDA (E)
                 (COMP E (QUOTE NIL) (QUOTE (4 21))))
        (COMP LAMBDA (E N C)
           (IF (EQ (SUB E E) (QUOTE 0))            dnl --- is the token a number?
                (CONS (QUOTE 2) (CONS E C))
           (IF (ATOM E)
                (CONS (QUOTE 1) (CONS (LOCATION E N) C))
           (IF (EQ (CAR E) (QUOTE BEGIN))
                (IF (EQ (CDR (CDR E)) (QUOTE NIL))
                    (COMP (CAR (CDR E)) N C)
                    (COMP (CAR (CDR E)) N (CONS (QUOTE 30) (COMP (CONS (QUOTE BEGIN) (CDR (CDR E))) N C))))
           (IF (EQ (CAR E) (QUOTE NOP))
                (COMP (CAR (CDR E)) N (CONS (QUOTE 0) C))
           (IF (EQ (CAR E) (QUOTE QUOTE))
                (CONS (QUOTE 2) (CONS (CAR (CDR E)) C))
           (IF (EQ (CAR E) (QUOTE ADD))
                (COMP (CAR (CDR E)) N (COMP (CAR (CDR (CDR E))) N (CONS (QUOTE 15) C)))
           (IF (EQ (CAR E) (QUOTE SUB))
                (COMP (CAR (CDR E)) N (COMP (CAR (CDR (CDR E))) N (CONS (QUOTE 16) C)))
           (IF (EQ (CAR E) (QUOTE MUL))
                (COMP (CAR (CDR E)) N (COMP (CAR (CDR (CDR E))) N (CONS (QUOTE 17) C)))
           (IF (EQ (CAR E) (QUOTE MULX))
                (COMP (CAR (CDR E)) N (COMP (CAR (CDR (CDR E))) N (CONS (QUOTE 28) C)))
           (IF (EQ (CAR E) (QUOTE DIV))
                (COMP (CAR (CDR E)) N (COMP (CAR (CDR (CDR E))) N (CONS (QUOTE 18) C)))
           (IF (EQ (CAR E) (QUOTE REM))
                (COMP (CAR (CDR E)) N (COMP (CAR (CDR (CDR E))) N (CONS (QUOTE 19) C)))
           (IF (EQ (CAR E) (QUOTE LEQ))
                (COMP (CAR (CDR E)) N (COMP (CAR (CDR (CDR E))) N (CONS (QUOTE 20) C)))
           (IF (EQ (CAR E) (QUOTE EQ))
                (COMP (CAR (CDR E)) N (COMP (CAR (CDR (CDR E))) N (CONS (QUOTE 14) C)))
           (IF (EQ (CAR E) (QUOTE CAR))
                (COMP (CAR (CDR E)) N (CONS (QUOTE 10) C))
           (IF (EQ (CAR E) (QUOTE CDR))
                (COMP (CAR (CDR E)) N (CONS (QUOTE 11) C))
           (IF (EQ (CAR E) (QUOTE ATOM))
                (COMP (CAR (CDR E)) N (CONS (QUOTE 12) C))
           (IF (EQ (CAR E) (QUOTE SYMBOL))
                (COMP (CAR (CDR E)) N (CONS (QUOTE 22) C))
           (IF (EQ (CAR E) (QUOTE NUMBER))
                (COMP (CAR (CDR E)) N (CONS (QUOTE 23) C))
           (IF (EQ (CAR E) (QUOTE STOP))
                (COMP (CAR (CDR E)) N (CONS (QUOTE 21) C))
           (IF (EQ (CAR E) (QUOTE GET))
                (CONS (QUOTE 24) C)
           (IF (EQ (CAR E) (QUOTE PUT))
                (COMP (CAR (CDR E)) N (CONS (QUOTE 25) C))
           (IF (EQ (CAR E) (QUOTE PUTEXP))
                (COMP (CAR (CDR E)) N (CONS (QUOTE 29) C))
           (IF (EQ (CAR E) (QUOTE CVEC))
                (COMP (CAR (CDR E)) N (CONS (QUOTE 31) C))
           (IF (EQ (CAR E) (QUOTE VSET))
                (COMP (CAR (CDR (CDR (CDR E)))) N (COMP (CAR (CDR (CDR E))) N (COMP (CAR (CDR E)) N (CONS (QUOTE 32) C))))
           (IF (EQ (CAR E) (QUOTE VREF))
                (COMP (CAR (CDR (CDR E))) N (COMP (CAR (CDR E)) N (CONS (QUOTE 33) C)))
           (IF (EQ (CAR E) (QUOTE VLEN))
                (COMP (CAR (CDR E)) N (CONS (QUOTE 34) C))
           (IF (EQ (CAR E) (QUOTE VCPY))
                (COMP (CAR (CDR (CDR (CDR (CDR (CDR E)))))) N (COMP (CAR (CDR (CDR (CDR (CDR E))))) N (COMP (CAR (CDR (CDR (CDR E)))) N (COMP (CAR (CDR (CDR E))) N (COMP (CAR (CDR E)) N (CONS (QUOTE 35) C))))))
           (IF (EQ (CAR E) (QUOTE CBIN))
                (COMP (CAR (CDR E)) N (CONS (QUOTE 36) C))
           (IF (EQ (CAR E) (QUOTE BSET))
                (COMP (CAR (CDR (CDR (CDR E)))) N (COMP (CAR (CDR (CDR E))) N (COMP (CAR (CDR E)) N (CONS (QUOTE 37) C))))
           (IF (EQ (CAR E) (QUOTE BREF))
                (COMP (CAR (CDR (CDR E))) N (COMP (CAR (CDR E)) N (CONS (QUOTE 38) C)))
           (IF (EQ (CAR E) (QUOTE BLEN))
                (COMP (CAR (CDR E)) N (CONS (QUOTE 39) C))
           (IF (EQ (CAR E) (QUOTE BCPY))
                (COMP (CAR (CDR (CDR (CDR (CDR (CDR E)))))) N (COMP (CAR (CDR (CDR (CDR (CDR E))))) N (COMP (CAR (CDR (CDR (CDR E)))) N (COMP (CAR (CDR (CDR E))) N (COMP (CAR (CDR E)) N (CONS (QUOTE 40) C))))))
           (IF (EQ (CAR E) (QUOTE CONS))
                (COMP (CAR (CDR (CDR E))) N (COMP (CAR (CDR E)) N (CONS (QUOTE 13) C)))
           (IF (EQ (CAR E) (QUOTE AND))
                (COMP (CONS (QUOTE IF) (CONS (CAR (CDR E)) (CONS (CAR (CDR (CDR E))) (CONS (QUOTE (QUOTE F)) (QUOTE NIL))))) N C)
           (IF (EQ (CAR E) (QUOTE OR))
                (COMP (CONS (QUOTE IF) (CONS (CAR (CDR E)) (CONS (QUOTE (QUOTE T)) (CONS (CAR (CDR (CDR E))) (QUOTE NIL))))) N C)
           (IF (EQ (CAR E) (QUOTE IF))
                (IF (EQ (CAR C) (QUOTE 5))
                     (LET (COMP (CAR (CDR E)) N (CONS (QUOTE 27)
                                                 (CONS THENPT (CONS ELSEPT C))))
                     (THENPT COMP (CAR (CDR (CDR E))) N (QUOTE (5)))
                     (ELSEPT COMP (CAR (CDR (CDR (CDR E)))) N (QUOTE (5)))  )
                     (LET (COMP (CAR (CDR E)) N (CONS (QUOTE 8)
                                                 (CONS THENPT (CONS ELSEPT C))))
                     (THENPT COMP (CAR (CDR (CDR E))) N (QUOTE (9)))
                     (ELSEPT COMP (CAR (CDR (CDR (CDR E)))) N (QUOTE (9)))  ))
           (IF (EQ (CAR E) (QUOTE LAMBDA))
                (LET (CONS (QUOTE 3) (CONS BODY C))
                   (BODY COMP (CAR (CDR (CDR E))) (CONS (CAR (CDR E)) N)
                                        (QUOTE (5))) )
           (IF (EQ (CAR E) (QUOTE LET))
        (LET (LET (COMPLIS ARGS N (CONS (QUOTE 3)
                         (CONS BODY
                           (IF (EQ (CAR C) (QUOTE 5))
                                (CONS (QUOTE 26) (CDR C))
                                (CONS (QUOTE 4) C)))))
                (BODY COMP (CAR (CDR E)) M (QUOTE (5))))
           (M CONS (VARS (CDR (CDR E))) N)
                (ARGS EXPRS (CDR (CDR E))))
           (IF (EQ (CAR E) (QUOTE LETREC))
                (LET (LET (CONS (QUOTE 6) (COMPLIS ARGS M
                        (CONS (QUOTE 3) (CONS BODY (CONS (QUOTE 7) C)))))
                (BODY COMP (CAR (CDR E)) M (QUOTE (5))))
             (M CONS (VARS (CDR (CDR E))) N)
             (ARGS EXPRS (CDR (CDR E))))
        (COMPLIS (CDR E) N (COMP (CAR E) N
          (IF (EQ (CAR C) (QUOTE 5))
               (CONS (QUOTE 26) (CDR C))
               (CONS (QUOTE 4) C))))))))))))))))))))))))))))))))))))))))))))
        (COMPLIS LAMBDA (E N C)
           (IF (EQ E (QUOTE NIL)) (CONS (QUOTE 2) (CONS (QUOTE NIL) C))
                (COMPLIS (CDR E) N (COMP (CAR E) N (CONS (QUOTE 13) C)))))
        (LOCATION LAMBDA (E N)
           (LETREC
                (IF (MEMBER E (CAR N)) (CONS (QUOTE 0) (POSN E (CAR N)))
                        (INCAR (LOCATION E (CDR N))))
           (MEMBER LAMBDA (E N)
                (IF (EQ N (QUOTE NIL)) (QUOTE NIL)
                (IF (EQ E (CAR N)) (QUOTE T) (MEMBER E (CDR N)))))
           (POSN LAMBDA (E N)
            (IF (EQ E (CAR N)) (QUOTE 0) (ADD (QUOTE 1) (POSN E (CDR N)))))
           (INCAR LAMBDA (L) (CONS (ADD (QUOTE 1) (CAR L)) (CDR L)))))
        (VARS LAMBDA (D)
           (IF (EQ D (QUOTE NIL)) (QUOTE NIL)
                (CONS (CAR (CAR D)) (VARS (CDR D)))))
        (EXPRS LAMBDA (D)
           (IF (EQ D (QUOTE NIL)) (QUOTE NIL)
                (CONS (CDR (CAR D)) (EXPRS (CDR D))))) )
