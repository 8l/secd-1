dnl --- Test expression parsing
(LETREC TEST
  (TEST LAMBDA (EXPR)
    (CFGPARSE
      (MAPFROMLIST ExpressionCFG)
      (MAPFROMLIST ExpressionDFA)
      (LAMBDA (TOKEN) (IF (NUMBER TOKEN) (QUOTE ID) TOKEN))
      (LAMBDA (TOKEN) (STOP (CONS (QUOTE ParseError) TOKEN)))
      (FLATTENEXPR EXPR)
      TAGGED))

  dnl --- Flattens the list, turning the beginning and end of sub-lists
  dnl     into OPENP & CLOSEP tokens, respectively.
  (FLATTENEXPR LAMBDA (L)
    (LETREC
      (FLATTENCC L (QUOTE NIL))
      (FLATTENCC LAMBDA (L CC)
        (IF (ISNIL L)
            (REVERSE CC)
        (IF (ATOM (CAR L))
            (FLATTENCC (CDR L) (CONS (CAR L) CC))
            (FLATTENCC
              (APPEND
                (CONS (QUOTE OPENP) (CAR L))
                (CONS (QUOTE CLOSEP) (CDR L)))
              CC))))))

  (TAGGED LAMBDA (X LHS RULENUM)
    (CONS (CONS LHS RULENUM) X))

  (ExpressionCFG QUOTE
include(ExpressionCFG.lso)
    )

  (ExpressionDFA QUOTE
include(ExpressionDFA.lso)
    )

include(Cfg.lso)
include(Util.lso)

  )
