dnl ---------------------------------------------------------------------------
dnl Scheme (R5RS) compiler
dnl ---------------------------------------------------------------------------
dnl NOTE:  This file must be processed by m4 before being fed to the secd
dnl        machine.
dnl ---------------------------------------------------------------------------

(LETREC COMPILE
  (COMPILE LAMBDA NIL
    (LEX PRINTTOKENS))

  dnl  -------------------------------------------------------------------------
  dnl | Processes tokens provided by the lexer by printing them to stdout and
  dnl | then passing control back to the lexer.
  dnl | X = the token
  dnl | REENTRY = the continuation for the lexer
  dnl  -------------------------------------------------------------------------
  (PRINTTOKENS LAMBDA (X REENTRY)
    (IF (ISNIL (PRINT X))
        (QUOTE NIL)
        (REENTRY PRINTTOKENS)))

  dnl  -------------------------------------------------------------------------
  dnl | Prints a token to stdout
  dnl | X = the token to print
  dnl  -------------------------------------------------------------------------
  (PRINT LAMBDA (X)
    (IF (ISNIL X)							dnl --- End of tokens
        X
    (IF (EQ (CAR X) (QUOTE VARIABLE))		dnl --- VARIABLE token
        (BEGIN
          (PRINTSTR (QUOTE (40 32)))		dnl --- print '( '
          (PUTEXP (QUOTE VARIABLE))			dnl --- print 'VARIABLE'
          (PRINTSTR (CDR X))				dnl --- print name
          (PRINTSTR (QUOTE (32 41 32)))		dnl --- print ' ) '
          X)
    (IF (EQ (CAR X) (QUOTE STRING))			dnl --- STRING token
        (BEGIN
          (PRINTSTR (QUOTE (40 32)))		dnl --- print '( '
          (PUTEXP (QUOTE STRING))			dnl --- print 'STRING'
          (PRINTSTR (CONS 34 (CDR X)))		dnl --- print '"' + str
          (PRINTSTR (QUOTE (34 32 41 32)))	dnl --- print '" ) '
          X)
        (PUTEXP X)))))						dnl --- Everything else

include(Util.lso)
include(LexScheme.lso)
)
