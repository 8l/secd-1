(LETREC ANALYSE
  (ANALYSE LAMBDA NIL (PARSEINITIAL (SCAN)))

  (PARSEINITIAL LAMBDA (C)
    (IF (LEQ C 0)
        (QUOTE NIL)
    (IF (ISOPENPAREN C)
        (CONS (QUOTE (OPENP)) (PARSEINITIAL (SCAN)))
    (IF (ISCLOSEPAREN C)
        (CONS (QUOTE (CLOSEP)) (PARSEINITIAL (SCAN)))
    (IF (ISINITIAL C)
        (PARSEIDENT (GET))
    (IF (ISDOT C)
        (PARSESTARTSWITHDOT (GET))
    (IF (ISPOUND C)
        (PARSESTARTSWITHPOUND (GET))
    (IF (ISDQUOTE C)
        (PARSESTRING (GET))
    (IF (ISQUOTE C)
        (CONS (QUOTE (QUOTE)) (PARSEINITIAL (SCAN)))
    (IF (ISSEMI C)
        (PARSEINITIAL (FIRST (SCAN) (SKIPCOMMENT)))
        (QUOTE ((ERROR)))))))))))))

  (PARSEIDENT LAMBDA (C)
    (IF (ISSUBSEQUENT C)
        (PARSEIDENT (GET))
        (CONS (QUOTE (IDENT)) (PARSEENDTOKEN C))))

  (PARSESTARTSWITHDOT LAMBDA (C)
    (IF (ISDOT C)
        (PARSEELLIPSIS (GET))
        (CONS (QUOTE (DOT)) (PARSEENDTOKEN (GET)))))

  (PARSEELLIPSIS LAMBDA (C)
    (IF (ISDOT C)
        (CONS (QUOTE (IDENT ELLIPSIS)) (PARSEENDTOKEN (GET)))
        (QUOTE ((ERROR)))))
  
  (PARSEENDTOKEN LAMBDA (C)
    (IF (LEQ C 0)
        (QUOTE NIL)
    (IF (ISWHITESPACE C)
        (PARSEINITIAL (SCAN))
    (IF (ISDELIM C)
        (PARSEINITIAL C)
        (QUOTE ((ERROR)))))))
  
  (PARSESTARTSWITHPOUND LAMBDA (C)
    (IF (EQ C 116)
        (CONS (QUOTE (BOOL T)) (PARSEENDTOKEN (GET)))
    (IF (EQ C 102)
        (CONS (QUOTE (BOOL T)) (PARSEENDTOKEN (GET)))
        (QUOTE (ERROR)))))
        
  (PARSESTRING LAMBDA (C)
    (IF (LEQ C 0)
        (QUOTE ((ERROR)))
    (IF (ISDQUOTE C)
        (CONS (QUOTE (STRING)) (PARSEINITIAL (SCAN)))
    (IF (ISBACKSLASH C)
        (PARSESTRINGESC (GET))
        (PARSESTRING (GET))))))

  (PARSESTRINGESC LAMBDA (C)
    (IF (LEQ C 0)
        (QUOTE ((ERROR)))
    (IF (ISBACKSLASH C)
        (PARSESTRING (GET))
    (IF (ISDQUOTE C)
        (PARSESTRING (GET))
        (QUOTE ((ERROR)))))))

  (AND LAMBDA (P Q) (IF P Q (QUOTE F)))
  (OR LAMBDA (P Q) (IF P (QUOTE T) Q))
  (ISNIL LAMBDA (L) (EQ L (QUOTE NIL)))
  (ISINRANGE LAMBDA (X MIN MAX)
    (AND (LEQ MIN X) (LEQ X MAX)))
  (ISDIGIT LAMBDA (C) (ISINRANGE C 48 57))
  (ISNONZERODIGIT LAMBDA (C) (ISINRANGE C 49 57))
  (CONTAINS LAMBDA (E L)
    (IF (ISNIL L)
        (QUOTE F)
        (OR (EQ E (CAR L)) (CONTAINS E (CDR L)))))
  (ISUPPER LAMBDA (C)
    (ISINRANGE C 65 90))
  (ISLOWER LAMBDA (C)
    (ISINRANGE C 97 122))
  (ISLETTER LAMBDA (C)
    (OR (ISUPPER C) (ISLOWER C)))
  (ISWHITESPACE LAMBDA (C)
    (CONTAINS C (QUOTE (32 9 10 13 0))))
  (ISDOT LAMBDA (C) (EQ C 46))
  (ISPOUND LAMBDA (C) (EQ C 35))
  (ISQUOTE LAMBDA (C) (EQ C 39))
  (ISOPENPAREN LAMBDA (C) (EQ C 40))
  (ISCLOSEPAREN LAMBDA (C) (EQ C 41))
  (ISNEWLINE LAMBDA (C) (EQ C 10))
  (ISSEMI LAMBDA (C) (EQ C 59))
  (ISSPECIALINITIAL LAMBDA (C)
    (CONTAINS C
      (QUOTE (33 36 37 38 42 47 58 60 61 62 63 126 95 94))))
  (ISSIGN LAMBDA (C) (OR (EQ C 43) (EQ C 45)))
  (ISPLUS LAMBDA (C) (EQ C 43))
  (ISMINUS LAMBDA (C) (EQ C 45))
  (ISDQUOTE LAMBDA (C) (EQ C 34)) 
  (ISDELIM LAMBDA (C)
    (OR (ISWHITESPACE C)
        (CONTAINS C
          (QUOTE (40 41 34 59)))))
  (ISBACKSLASH LAMBDA (C) (EQ C 92))
  (ISINITIAL LAMBDA (C)
    (OR (ISLETTER C) (ISSPECIALINITIAL C)))
  (ISSPECIALSUBSEQUENT LAMBDA (C)
    (CONTAINS C
      (QUOTE (43 45 46))))
  (ISSUBSEQUENT LAMBDA (C)
    (OR (ISINITIAL C) (OR (ISDIGIT C) (ISSPECIALSUBSEQUENT C))))
  (SKIPWS LAMBDA NIL 
    (LET
      (IF (ISWHITESPACE C) (SKIPWS) C)
      (C GET)))
  (SCAN LAMBDA NIL
    (LET
      (IF (ISWHITESPACE C)
          (SCAN)
          (IF (ISSEMI C)
              (FIRST (SCAN) (SKIPCOMMENT))
              C))
      (C GET)))
  (SKIPCOMMENT LAMBDA NIL
    (LET
      (IF (ISNEWLINE C) (GET) (SKIPCOMMENT))
      (C GET)))
  (FIRST LAMBDA (A B) A))
